translation_task:
  description: >
    Translate the buyer's query "{query}" into a precise Chinese query suitable for effective searches on 1688.com.
  expected_output: >
    A translated query string that accurately reflects the buyer's intent.
  agent: translation_agent
  output_format:
    type: dict
    description: The translation output containing the Chinese query
    fields:
      translated_query:
        type: str
        description: The Chinese translation of the input query

search_task:
  description: >
    Search for the translated query on 1688.com using the provided tool.
  expected_output: >
    A list with 5-10 candidate items that best match the translated query.
  agent: search_expert
  output_format:
    type: dict
    description: Search results from 1688.com
    fields:
      search_results:
        type: list
        description: List of products found on 1688.com
  dependencies:
    - translation_task

detail_extraction_task:
  description: >
    Retrieve comprehensive details for each candidate item from the search results.
  expected_output: >
    A detailed list of candidate products including variants, pricing, MOQ, and quality metrics.
    Keep only product variants that meet the buyer's requirements, remove other variants.
  agent: detail_extraction_agent
  output_format:
    type: dict
    description: Detailed product information
    fields:
      detailed_products:
        type: list
        description: Detailed information for each candidate product
        item_fields:
          item_id: 
            type: str
            description: Unique identifier for the product
          product_url:
            type: str
            description: URL to the product page
          title:
            type: str
            description: Product title
          price_info:
            type: dict
            description: Price information including min/max prices
          mixed_batch:
            type: dict
            description: MOQ and mixed order requirements
          product_props:
            type: list
            description: Product properties and specifications
          shop_info:
            type: dict
            description: Seller/shop information
          service_tags:
            type: list
            description: Available service guarantees
          stock:
            type: int
            description: Available inventory
          skus:
            type: list
            description: Available variants with prices and specifications
  dependencies:
    - search_task

ranking_task:
  description: >
    Perform evaluation candidate products based on relevance to the original query, product quality, price, and MOQ.
    Ensure that selected product variant meets the buyer's requirements.
  expected_output: >
    A ranked list of candidate products with the optimal product clearly identified.
  agent: ranking_agent
  output_format:
    type: dict
    description: Ranked product results
    fields:
      ranked_products:
        type: list
        description: Ranked list of products with scores
        item_fields:
          item_id:
            type: str
            description: Product identifier
          product_url:
            type: str
            description: Direct URL to the product page
          rank:
            type: int
            description: Ranking position (1 being the best)
          score:
            type: float
            description: Overall score (0-100)
          product_details:
            type: dict
            description: Complete product details from previous task
          ranking_factors:
            type: dict
            description: Scores for individual ranking criteria (price, quality, relevance, etc.)
  dependencies:
    - detail_extraction_task
